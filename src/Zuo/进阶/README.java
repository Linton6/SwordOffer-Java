/**
 * ## 进阶
 * ### 01
 * 1. KMP算法详解与应用: @解决包含问题 {@link Zuo.进阶.KMP01#getIndexOf(java.lang.String, java.lang.String)}
 * 2. 求字符串最长前缀/后缀的长度     {@link Zuo.进阶.KMP01#getNextArray(char[])}
 *
 * ### 02
 * 3. Manacher算法详解与应用 ：@在一个字符串中找到最长回文子串（正着念，反着念都一样）
 * 4. BFPRT算法详解与应用 ：{@link Zuo.进阶.BFPRT02}
 * 5. 滑动窗口：双端队列 {@link Zuo.进阶.SlidingWindow#getMaxWindows(int[], int)}
 *
 * ### 03
 * 6. 单调栈 : 解决 左右两边，离当前数最近的，比它大的数是啥？
 * 思路： 设计一个栈，从底到顶。保证从大到小。数组arr，往栈里填数据，当落入的数a, 比此时栈顶元素b大，
 *       那么开始收集b 的信息。b 的右边最近的大数是a,左边最近的大数是b弹出后下一个栈顶c，一次进行。
 *       当数组的元素都放入栈中后，若栈中还有元素，依次弹出的数，右边的最近大数为空，左边的最近大数为下一个元素。
 *       特殊情况：相等的元素，下标写在一起（可以是链表），共同结算（就是一起操作）
 *
 * ### 04
 * 平衡二叉树 搜索二叉树
 * 轮廓问题 {@link Zuo.进阶.BuildingOutline04#buildingOutLine(int[][])}
 * 给定一个数组，目标值aim,求出和为aim 的最长子数组
 *
 * ### 05  好多看不懂！！
 * 给定一颗二叉树的头结点head，请返回最大搜索二叉字数的大小
 * LRU算法
 *
 * ### 06
 * LFU算法
 * 判断完全二叉树，1) 按层遍历当前树，是否有右无左
 *               2) 如果当前左右节点不全，后面的一定都没有左右节点
 * 跳表 没看实现，自己找的帖子看的
 *
 * ### 07
 *
 *
 */